plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'java'
    id 'eclipse'
    id 'com.diffplug.eclipse.apt' version '3.24.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
    inContainerTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
    realEnvTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    inContainerTestImplementation.extendsFrom testImplementation
    inContainerTestRuntimeOnly.extendsFrom testRuntimeOnly
    realEnvTestImplementation.extendsFrom inContainerTestImplementation
    realEnvTestRuntimeOnly.extendsFrom inContainerTestRuntimeOnly
}

task inContainerTest(type: Test) {
    useJUnitPlatform()
    description = 'Runs in-container tests.'
    group = 'verification'

    testClassesDirs = sourceSets.inContainerTest.output.classesDirs
    classpath = sourceSets.inContainerTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn inContainerTest

task realEnvTest(type: Test) {
    useJUnitPlatform()
    description = 'Runs real environment tests.'
    group = 'verification'

    testClassesDirs = sourceSets.realEnvTest.output.classesDirs
    classpath = sourceSets.realEnvTest.runtimeClasspath
    shouldRunAfter inContainerTest
}

check.dependsOn realEnvTest

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'org.springframework.boot', module: 'spring-boot-test'
    }
    inContainerTestImplementation 'org.springframework.boot:spring-boot-test'
    inContainerTestImplementation 'org.springframework.security:spring-security-test'
}

test {
    useJUnitPlatform()
}
